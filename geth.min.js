function printBlock(n){console.log("Block number     : "+n.number+"\n hash            : "+n.hash+"\n parentHash      : "+n.parentHash+"\n nonce           : "+n.nonce+"\n sha3Uncles      : "+n.sha3Uncles+"\n logsBloom       : "+n.logsBloom+"\n transactionsRoot: "+n.transactionsRoot+"\n stateRoot       : "+n.stateRoot+"\n miner           : "+n.miner+"\n difficulty      : "+n.difficulty+"\n totalDifficulty : "+n.totalDifficulty+"\n extraData       : "+n.extraData+"\n size            : "+n.size+"\n gasLimit        : "+n.gasLimit+"\n gasUsed         : "+n.gasUsed+"\n timestamp       : "+n.timestamp+"\n transactions    : "+n.transactions+"\n uncles          : "+n.uncles),null!=n.transactions&&(console.log("--- transactions ---"),n.transactions.forEach(function(n){printTransaction(n)}))}function checkAllBalances(){var n=0;
eth.accounts.forEach(function(t){console.log("  eth.accounts["+n+"]: "+t+" \tbalance: "+web3.fromWei(eth.getBalance(t),"ether")+" ether"),n++})}function padTokens(n,t){for(var e=n.toPrecision(t);
e.length<t;
)e=" "+e;
return e}function padEthers(n){for(var t=n.toFixed(18);
t.length<27;
)t=" "+t;
return t}function checkAllBalances(){var n=[{type:"function",outputs:[{type:"uint256",name:"",value:"5e+22"}],name:"minTokensToCreate",inputs:[],constant:!0},{type:"function",outputs:[{type:"uint256",name:"",value:"2.668900014413644230605979e+24"}],name:"totalSupply",inputs:[],constant:!0},{type:"function",outputs:[{type:"uint256",name:"",value:"1464426000"}],name:"closingTime",inputs:[],constant:!0},{type:"function",outputs:[],name:"refund",inputs:[],constant:!1},{type:"function",outputs:[{type:"address",name:"",value:"0xda4a4626d3e16e094de3225a751aab7128e96526"}],name:"curator",inputs:[],constant:!0},{type:"function",outputs:[{type:"uint256",name:"balance",value:"0"}],name:"balanceOf",inputs:[{type:"address",name:"_owner"}],constant:!0},{type:"function",outputs:[{type:"uint256",name:"_numberOfProposals",value:"0"}],name:"numberOfProposals",inputs:[],constant:!0},{type:"function",outputs:[{type:"address",name:"",value:"0x807640a13483f8ac783c557fcdf27be11ea4ac7a"}],name:"extraBalance",inputs:[],constant:!0},{type:"function",outputs:[{type:"bool",name:"",value:!0}],name:"isFueled",inputs:[],constant:!0},{type:"function",outputs:[{type:"bool",name:"success"}],name:"createTokenProxy",inputs:[{type:"address",name:"_tokenHolder"}],constant:!1},{type:"function",outputs:[{type:"uint256",name:"_voteID"}],name:"vote",inputs:[{type:"uint256",name:"_proposalID"},{type:"bool",name:"_supportsProposal"}],constant:!1},{type:"event",name:"FuelingToDate",inputs:[{type:"uint256",name:"value",indexed:!1}],anonymous:!1},{type:"event",name:"ProposalAdded",inputs:[{type:"uint256",name:"proposalID",indexed:!0},{type:"address",name:"recipient",indexed:!1},{type:"uint256",name:"amount",indexed:!1},{type:"bool",name:"newCurator",indexed:!1},{type:"string",name:"description",indexed:!1}],anonymous:!1},{type:"event",name:"ProposalTallied",inputs:[{type:"uint256",name:"proposalID",indexed:!0},{type:"bool",name:"result",indexed:!1},{type:"uint256",name:"quorum",indexed:!1}],anonymous:!1}],t="0xBB9bc244D798123fDe783fCc1C72d3Bb8C189413",e=eth.contract(n).at(t),o=0,a=0;
console.log("  #     Account                                        TheDAO                      ethers"),console.log("------- ------------------------------------------ ---------- ---------------------------");
var s=0;
eth.accounts.forEach(function(n){var t=e.balanceOf(n)/parseFloat(1e16);
o+=parseFloat(t);
var c=web3.fromWei(eth.getBalance(n),"ether");
a+=parseFloat(c),console.log("  "+s+"\t"+n+" "+padTokens(t,10)+" "+padEthers(c)),s++}),console.log("------- ------------------------------------------ ---------- ---------------------------"),console.log("  "+s+"                                               "+padTokens(o,10)+" "+padEthers(a))}function checkTransactionCount(n,t){console.log("Searching for non-zero transaction counts between blocks "+n+" and "+t);
for(var e=n;
e<=t;
e++){var o=eth.getBlock(e);
null!=o&&null!=o.transactions&&0!=o.transactions.length&&console.log("Block #"+e+" has "+o.transactions.length+" transactions")}}function printBlock(n){console.log("Block number     : "+n.number+"\n hash            : "+n.hash+"\n parentHash      : "+n.parentHash+"\n nonce           : "+n.nonce+"\n sha3Uncles      : "+n.sha3Uncles+"\n logsBloom       : "+n.logsBloom+"\n transactionsRoot: "+n.transactionsRoot+"\n stateRoot       : "+n.stateRoot+"\n miner           : "+n.miner+"\n difficulty      : "+n.difficulty+"\n totalDifficulty : "+n.totalDifficulty+"\n extraData       : "+n.extraData+"\n size            : "+n.size+"\n gasLimit        : "+n.gasLimit+"\n gasUsed         : "+n.gasUsed+"\n timestamp       : "+n.timestamp+"\n transactions    : "+n.transactions+"\n uncles          : "+n.uncles),null!=n.transactions&&(console.log("--- transactions ---"),n.transactions.forEach(function(n){printTransaction(n)}))}function getMinedBlocks(n,t,e){null==e&&(e=eth.blockNumber,console.log("Using endBlockNumber: "+e)),null==t&&(t=e-1e4,console.log("Using startBlockNumber: "+t)),console.log('Searching for miner "'+n+'" within blocks '+t+" and "+e+'"');
for(var o=t;
o<=e;
o++){o%1e3==0&&console.log("Searching block "+o);
var a=eth.getBlock(o);
if(null!=a&&(a.miner!=n&&"*"!=n||(console.log("Found block "+a.number),printBlock(a)),null!=a.uncles))for(var s=0;
s<2;
s++){var c=eth.getUncle(o,s);
null!=c&&(c.miner!=n&&"*"!=n||(console.log("Found uncle "+a.number+" uncle "+s),printUncle(a,s,c)))}}}function printUncle(n,t,e){console.log("Block number     : "+n.number+" , uncle position: "+t+"\n Uncle number    : "+e.number+"\n hash            : "+e.hash+"\n parentHash      : "+e.parentHash+"\n nonce           : "+e.nonce+"\n sha3Uncles      : "+e.sha3Uncles+"\n logsBloom       : "+e.logsBloom+"\n transactionsRoot: "+e.transactionsRoot+"\n stateRoot       : "+e.stateRoot+"\n miner           : "+e.miner+"\n difficulty      : "+e.difficulty+"\n totalDifficulty : "+e.totalDifficulty+"\n extraData       : "+e.extraData+"\n size            : "+e.size+"\n gasLimit        : "+e.gasLimit+"\n gasUsed         : "+e.gasUsed+"\n timestamp       : "+e.timestamp+"\n transactions    : "+e.transactions+"\n")}function checkWork(){if(eth.getBlock("pending").transactions.length>0){if(eth.mining)return;
console.log("== Pending transactions! Mining..."),miner.start(mining_threads)}else miner.stop(),console.log("== No transactions! Mining stopped.")}function getTransactionsByAccounts(n,t,e){null==e&&(e=eth.blockNumber,console.log("Using endBlockNumber: "+e)),null==t&&(t=e-1e3,console.log("Using startBlockNumber: "+t)),console.log('Searching for transactions to/from account "'+n+'" within blocks '+t+" and "+e+'"');
for(var o=t;
o<=e;
o++){o%1e3==0&&console.log("Searching block "+o);
var a=eth.getBlock(o,!0);
null!=a&&null!=a.transactions&&a.transactions.forEach(function(t){"*"!=n&&n!=t.from&&n!=t.to||console.log("  tx hash          : "+t.hash+"\n   nonce           : "+t.nonce+"\n   blockHash       : "+t.blockHash+"\n   blockNumber     : "+t.blockNumber+"\n   transactionIndex: "+t.transactionIndex+"\n   from            : "+t.from+"\n   to              : "+t.to+"\n   value           : "+t.value+"\n   gasPrice        : "+t.gasPrice+"\n   gas             : "+t.gas+"\n   input           : "+t.input)})}}function printTransaction(n){var t=eth.getTransaction(n);
null!=t&&console.log("  tx hash          : "+t.hash+"\n   nonce           : "+t.nonce+"\n   blockHash       : "+t.blockHash+"\n   blockNumber     : "+t.blockNumber+"\n   transactionIndex: "+t.transactionIndex+"\n   from            : "+t.from+"\n   to              : "+t.to+"\n   value           : "+t.value+"\n   gasPrice        : "+t.gasPrice+"\n   gas             : "+t.gas+"\n   input           : "+t.input)}function printTransaction(n){var t=eth.getTransaction(n);
null!=t&&console.log("  tx hash          : "+t.hash+"\n   nonce           : "+t.nonce+"\n   blockHash       : "+t.blockHash+"\n   blockNumber     : "+t.blockNumber+"\n   transactionIndex: "+t.transactionIndex+"\n   from            : "+t.from+"\n   to              : "+t.to+"\n   value           : "+t.value+"\n   gasPrice        : "+t.gasPrice+"\n   gas             : "+t.gas+"\n   input           : "+t.input)}var tokenInterface=[{type:"function",name:"name",constant:!0,inputs:[],outputs:[{name:"",type:"string"}]},{type:"function",name:"decimals",constant:!0,inputs:[],outputs:[{name:"",type:"uint8"}]},{type:"function",name:"balanceOf",constant:!0,inputs:[{name:"",type:"address"}],outputs:[{name:"",type:"uint256"}]},{type:"function",name:"symbol",constant:!0,inputs:[],outputs:[{name:"",type:"string"}]},{type:"function",name:"transfer",constant:!1,inputs:[{name:"_to",type:"address"},{name:"_value",type:"uint256"}],outputs:[]},{type:"constructor",inputs:[{name:"_supply",type:"uint256"},{name:"_name",type:"string"},{name:"_decimals",type:"uint8"},{name:"_symbol",type:"string"}]},{name:"Transfer",type:"event",anonymous:!1,inputs:[{indexed:!0,name:"from",type:"address"},{indexed:!0,name:"to",type:"address"},{indexed:!1,name:"value",type:"uint256"}]}];
TokenContract=web3.eth.contract(tokenInterface);
for(var lowestBlock=474147,highestBlock=eth.getBlock("latest").number,x=lowestBlock;
x<highestBlock;
x++)for(var transactions=eth.getBlock(x).transactions,y=0;
y<transactions.length;
y++){var contractAddr=eth.getTransactionReceipt(transactions[y]).contractAddress;
if(null!=contractAddr){var tokenInstance=TokenContract.at(contractAddr),symbol="",decimals="",name="";
try{symbol=tokenInstance.symbol()}catch(err){}try{decimals=tokenInstance.decimals()}catch(err){}try{name=tokenInstance.name()}catch(err){}null!=symbol&&""!=symbol&&null!=name&&""!=name&&(console.log("-----------"),console.log("Contract Address: "+contractAddr),console.log("Name: "+name),console.log("Symbol: "+symbol),console.log("Decimals: "+decimals),console.log("-----------"))}}var mining_threads=1;
eth.filter("latest",function(n,t){checkWork()}),eth.filter("pending",function(n,t){checkWork()}),checkWork();
